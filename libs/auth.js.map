{"version":3,"file":"auth.js","names":["Auth","config","Error","site_url","username","password","grant_type","client_id","response_type","request_timeout","post","method","url","AUTH_ENDPOINT","headers","REQUEST_ACCEPT_HEADER","AUTH_REQUEST_CONTENT_TYPE_HEADER","responseType","timeout","data","qs","stringify","encode","axios","defaults","common","then","res","console","info","toUpperCase","statusText","catch","err","error","message"],"sources":["../src/libs/auth.js"],"sourcesContent":["import axios from \"axios\";\nimport qs from \"qs\";\nimport { AUTH_ENDPOINT, AUTH_REQUEST_CONTENT_TYPE_HEADER, REQUEST_ACCEPT_HEADER } from \"../constants\";\n\nclass Auth {\n\tconstructor(config) {\n\t\tif (!config) {\n\t\t\tthrow new Error(\"Optimizely/Episerver API auth config required. It is required to make any call to the API\");\n\t\t}\n\n\t\tthis.site_url = config.site_url;\n\t\tthis.username = config.username;\n\t\tthis.password = config.password;\n\t\tthis.grant_type = config.grant_type;\n\t\tthis.client_id = config.client_id;\n\t\tthis.response_type = config.response_type;\n\t\tthis.request_timeout = config.request_timeout;\n\t}\n\n\tasync post() {\n\t\tlet config = {\n\t\t\tmethod: \"post\",\n\t\t\turl: this.site_url + AUTH_ENDPOINT,\n\t\t\theaders: {\n\t\t\t\t\"Accept\": REQUEST_ACCEPT_HEADER,\n\t\t\t\t\"Content-Type\": AUTH_REQUEST_CONTENT_TYPE_HEADER\n\t\t\t},\n\t\t\tresponseType: this.response_type,\n\t\t\ttimeout: this.request_timeout,\n\t\t\tdata: qs.stringify(\n\t\t\t\t{\n\t\t\t\t\tpassword: this.password,\n\t\t\t\t\tusername: this.username,\n\t\t\t\t\tgrant_type: this.grant_type,\n\t\t\t\t\tclient_id: this.client_id\n\t\t\t\t},\n\t\t\t\t{ encode: false }\n\t\t\t)\n\t\t};\n\n\t\t// Override default `axios` instance\n\t\taxios.defaults.headers.common[\"Accept\"] = REQUEST_ACCEPT_HEADER;\n\t\taxios.defaults.headers.common[\"Content-Type\"] = REQUEST_ACCEPT_HEADER;\n\n\t\tconst { data } = await axios(config)\n\t\t\t.then((res) => {\n\t\t\t\t// Send log message when endpoint request is successful\n\t\t\t\tconsole.info(`[${config.method.toUpperCase()}] ${config.url} (${res.statusText})`);\n\t\t\t\treturn res;\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\t// Send log message when endpoint request is unsuccessful\n\t\t\t\tconsole.error(`[${config.method.toUpperCase()}] ${config.url} - ${err.message}`);\n\t\t\t\tthrow err;\n\t\t\t});\n\n\t\treturn data;\n\t}\n}\n\nexport default Auth;\n"],"mappings":"ubAIMA,IAAI,YACT,cAAYC,MAAM,CAAE,CACnB,GAAI,CAACA,MAAM,CACV,KAAM,IAAIC,MAAK,CAAC,2FAA2F,CAAC,CAG7G,IAAI,CAACC,QAAQ,CAAGF,MAAM,CAACE,QAAQ,CAC/B,IAAI,CAACC,QAAQ,CAAGH,MAAM,CAACG,QAAQ,CAC/B,IAAI,CAACC,QAAQ,CAAGJ,MAAM,CAACI,QAAQ,CAC/B,IAAI,CAACC,UAAU,CAAGL,MAAM,CAACK,UAAU,CACnC,IAAI,CAACC,SAAS,CAAGN,MAAM,CAACM,SAAS,CACjC,IAAI,CAACC,aAAa,CAAGP,MAAM,CAACO,aAAa,CACzC,IAAI,CAACC,eAAe,CAAGR,MAAM,CAACQ,eAC/B,CAAC,wCAEKC,IAAI,kIAAV,qKACKT,OAAM,CAAG,CACZU,MAAM,CAAE,MAAM,CACdC,GAAG,CAAE,IAAI,CAACT,QAAQ,CAAGU,wBAAa,CAClCC,OAAO,CAAE,CACR,OAAUC,gCAAqB,CAC/B,eAAgBC,2CACjB,CAAC,CACDC,YAAY,CAAE,IAAI,CAACT,aAAa,CAChCU,OAAO,CAAE,IAAI,CAACT,eAAe,CAC7BU,IAAI,CAAEC,WAAE,CAACC,SAAS,CACjB,CACChB,QAAQ,CAAE,IAAI,CAACA,QAAQ,CACvBD,QAAQ,CAAE,IAAI,CAACA,QAAQ,CACvBE,UAAU,CAAE,IAAI,CAACA,UAAU,CAC3BC,SAAS,CAAE,IAAI,CAACA,SACjB,CAAC,CACD,CAAEe,MAAM,GAAQ,CAAC,CAEnB,CAAC,CAGDC,cAAK,CAACC,QAAQ,CAACV,OAAO,CAACW,MAAM,OAAU,CAAGV,gCAAqB,CAC/DQ,cAAK,CAACC,QAAQ,CAACV,OAAO,CAACW,MAAM,CAAC,cAAc,CAAC,CAAGV,gCAAqB,iBAE9C,GAAAQ,cAAK,EAACtB,MAAM,CAAC,CAClCyB,IAAI,CAAC,SAACC,GAAG,CAAK,CAGd,MADAC,QAAO,CAACC,IAAI,KAAK5B,MAAM,CAACU,MAAM,CAACmB,WAAW,EAAE,MAAK7B,MAAM,CAACW,GAAG,MAAKe,GAAG,CAACI,UAAU,KAAI,CAC3EJ,GACR,CAAC,CAAC,CACDK,KAAK,CAAC,SAACC,GAAG,CAAK,CAGf,KADAL,QAAO,CAACM,KAAK,KAAKjC,MAAM,CAACU,MAAM,CAACmB,WAAW,EAAE,MAAK7B,MAAM,CAACW,GAAG,OAAMqB,GAAG,CAACE,OAAO,CAAG,CAC1EF,GACP,CAAC,CAAC,mDAVKd,IAAI,uBAAJA,IAAI,0BAYLA,IAAI,2DACX,mCAGanB,IAAI"}